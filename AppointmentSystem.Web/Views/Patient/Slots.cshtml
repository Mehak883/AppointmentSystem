@using AppointmentSystem.Models
@model Dictionary<DateTime, List<AppointmentSystem.Dtos.Slot.SlotPatientResponseDto>>

<div class="container mt-4">
    <h2 class="main-color"><i class="bi bi-calendar-event"></i> Available Slots</h2>

    <div class="row">
        @foreach (var group in Model)
        {
            <div class="col-md-6 mb-4">
                <div class="card shadow-lg border-0 rounded">
                    <div class="card-header main-bg-color text-white">
                        <h5 class="mb-0"><i class="bi bi-calendar3"></i> @group.Key.ToString("dddd, dd MMM yyyy")</h5>
                    </div>
                    <div class="card-body">
                        <ul class="list-group">
                            @foreach (var slot in group.Value)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                        <strong>
                                         <i class="bi bi-clock text-success"></i> 
                                        @(new DateTime(slot.StartTime.Ticks).ToString("hh:mm tt")) - 
                                        @(new DateTime(slot.EndTime.Ticks).ToString("hh:mm tt"))
                                        </strong>
                                    @switch (slot.Status)
                                    {
                                        case SlotStatus.Available:
                                            @if (slot.Date.Date.Add(slot.StartTime) > DateTime.Now) // ✅ Ensure start time is in the future
                                            {
                                <form method="post" asp-action="BookSlot" asp-controller="Patient">
                                    <input type="hidden" name="slotId" value="@slot.SlotId" />
                                    <input type="hidden" name="specializationId" value="@ViewBag.SpecializationId" />  
                                    <button type="submit" class="btn btn-outline-success btn-sm rounded-pill px-3">
                                        <i class="bi bi-calendar-check"></i> Book
                                    </button>
                                </form>
                                            }
                                            else
                                            {
                                <span class="badge bg-secondary px-3 py-2">Expired</span>  <!-- ✅ Show expired for past slots -->
                                            }
                                            break;
                                        

                                        case SlotStatus.Booked:
                                                            <span class="badge bg-warning text-dark px-3 py-2">Booked</span>
                                            break;

                                        case SlotStatus.Completed:
                                                            <span class="badge bg-secondary px-3 py-2">Completed</span>
                                            break;

                                        case SlotStatus.Cancelled:
                                                            <span class="badge bg-danger px-3 py-2">Cancelled</span>
                                            break;
                                    }
                                  
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
